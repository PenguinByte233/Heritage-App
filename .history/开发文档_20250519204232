非遗小程序开发文档
项目概述
本项目是一个非遗文化小程序，包含前端和后端两个部分：
前端：基于uni-app框架开发的小程序应用
后端：基于Node.js和Express开发的服务端应用
环境要求
开发环境
Node.js: v16.x 或更高版本
npm: v8.x 或更高版本
MySQL: v8.0 或更高版本
操作系统支持
Windows 10/11
macOS
Linux
项目结构
安装步骤
1. 克隆项目
2. 后端设置
安装后端依赖
后端依赖列表
以下是后端项目所需的主要依赖：
配置数据库
在MySQL中创建数据库：
配置数据库连接
编辑 backend/config/db.config.js 文件：
初始化数据库表
初始化样本数据
3. 前端设置
安装前端依赖
前端依赖列表
以下是前端项目所需的主要依赖：
配置前端API地址
编辑 frontend/config/index.js 文件，配置后端API地址：
启动项目
启动后端服务
后端服务默认运行在 http://localhost:3001
启动前端开发服务
数据初始化说明
项目提供了数据初始化脚本，可以快速填充示例数据。脚本位于 backend/scripts/inserAllData.js。
使用方法
初始化所有表数据：
初始化特定表数据：
可用的表名参数
users - 初始化用户表
home_resources - 初始化首页资源表
map_resources - 初始化地图资源表
learning - 初始化学习资源表
products - 初始化商品表
orders - 初始化订单表
cart - 初始化购物车表
注意事项
脚本会先清空表中的现有数据，再插入新数据
脚本执行过程中会暂时禁用外键约束
如果您已有数据并想保留，请先备份数据库
项目构建
前端构建
构建后的文件将位于 frontend/dist/ 目录
后端构建
后端项目不需要特别的构建步骤，直接部署Node.js项目即可。
常见问题
数据库连接错误
检查MySQL服务是否正常运行
验证数据库连接参数是否正确
确认用户是否有足够的权限
前端API请求失败
检查后端服务是否正常运行
验证API基础URL配置是否正确
检查网络请求是否被跨域策略阻止
初始化脚本运行失败
确保已安装所有必要依赖
检查文件系统权限是否允许创建目录和文件
验证数据库连接是否正常